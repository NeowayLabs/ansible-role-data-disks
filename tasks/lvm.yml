---
- name: Manage lvm volume groups for data disks
  become: true
  lvg:
    vg: '{{ item.lvm_vg }}'
    pvs: '{{ item.devices | join(",") }}'
    pesize: '{{ item.lvm_pesize | default(4)}}'
    vg_options: '{{ item.lvm_vg_options | default("--clustered n")}}'
    state: present
  with_items: '{{ data_disks }}'
  when:
    - item.type is defined
    - item.type == 'lvm'

- name: Manage lvm logical volumes for data disks
  become: true
  lvol:
    vg: '{{ item.lvm_vg }}'
    lv: '{{ item.lvm_lv }}'
    size: '{{ item.lvm_lv_size | default("100%VG") }}'
    opts: '{{ item.lvm_lv_options | default(None) }}'
  with_items: '{{ data_disks }}'
  when:
    - item.type is defined
    - item.type == 'lvm'

- name: Format lvm logical volumes
  become: true
  filesystem:
    dev: '/dev/mapper/{{ item.lvm_vg }}-{{ item.lvm_lv }}'
    fstype: '{{ item.fs_type }}'
    opts: '{{ item.fs_options | default(None) }}'
  with_items: '{{ data_disks }}'
  when:
    - item.type is defined
    - item.type == 'lvm'

- name: Configure systemd unit files for lvm disks
  become: true
  template:
    dest: "/etc/systemd/system/{{ item.path[1:] | replace('/', '-') }}.mount"
    src: templates/mount-unit-lvm.j2
  with_items: '{{ data_disks }}'
  when:
    - ansible_service_mgr == 'systemd'
    - item.type is defined
    - item.type == 'lvm'
  register: systemd_mount_config

- name: Enable/start systemd units for lvm disks
  become: true
  systemd:
    name: '{{ item }}'
    daemon_reload: yes
    enabled: yes
    state: started
  with_items:
    - 'lvm2-lvmetad.service'
    - 'lvm2-lvmetad.socket'

- name: Enable/start systemd units for lvm disks
  become: true
  systemd:
    name: "{{ item.path[1:] | replace('/', '-') }}.mount"
    daemon_reload: yes
    enabled: yes
    state: started
  with_items: '{{ data_disks }}'
  when:
    - ansible_service_mgr == 'systemd'
    - item.type is defined
    - item.type == 'lvm'
